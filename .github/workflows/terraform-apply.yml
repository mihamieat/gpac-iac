name: "Terraform Apply with Ansible Provisioning"
on:
  push:

env:
  TF_CLOUD_ORGANIZATION: "${{ secrets.TF_CLOUD_ORGANIZATION }}"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "${{ secrets.TF_WORKSPACE }}"
  TF_WORKSPACE_KEY: "${{ secrets.TF_WORKSPACE_KEY }}"
  CONFIG_DIRECTORY: "./terraform"

jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

      - name: Get Outputs via API
        id: tf-outputs
        run: |
          RESPONSE=$(curl -s \
            --header "Authorization: Bearer $TF_API_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            "https://app.terraform.io/api/v2/workspaces/$TF_WORKSPACE_KEY/current-state-version-outputs")

          BACKEND_IP=$(echo "$RESPONSE" | jq -r '.data[] | select(.attributes.name=="backend_ip") | .attributes.value')
          FRONTEND_IP=$(echo "$RESPONSE" | jq -r '.data[] | select(.attributes.name=="frontend_ip") | .attributes.value')
          DATABASE_IP=$(echo "$RESPONSE" | jq -r '.data[] | select(.attributes.name=="database_ip") | .attributes.value')
          echo "backend_ip=$BACKEND_IP" >> $GITHUB_OUTPUT
          echo "frontend_ip=$FRONTEND_IP" >> $GITHUB_OUTPUT
          echo "database_ip=$DATABASE_IP" >> $GITHUB_OUTPUT

      - name: Save Outputs
        run: |
          echo "${{ steps.tf-outputs.outputs.database_ip }}" > database_ip.txt
          echo "DATABASE_IP=${{ steps.tf-outputs.outputs.database_ip }}" >> $GITHUB_ENV

  ansible:
    name: "Ansible Provisioning"
    needs: terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.DATABASE_IP }} >> ~/.ssh/known_hosts

      - name: Create Inventory File
        run: |
          echo "[mongodb]" > inventory.ini
          echo "${{ env.DATABASE_IP }} ansible_user=admin" >> inventory.ini

      - name: Run Install Mongo DB Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v3
        with:
          playbook: playbooks/install-mongodb.yaml
          inventory: inventory.ini
          options: |
            --private-key ~/.ssh/id_rsa
            --user admin
